loss_object=tf.keras.losses.SparseCategoricalCrossentropy()
optimizer=tf.keras.optimizers.Adam()

train_loss=tf.keras.metrics.Mean()
train_acc=tf.keras.metrics.SparseCategoricalAccuracy()

test_loss=tf.keras.metrics.Mean()
test_acc=tf.keras.metrics.SparseCategoricalAccuracy()

def train_step(model,input,label,loss_object,optimizer,train_loss,train_acc):
  with tf.GradientTape() as tape:
    pre=model(input,training=True)
    loss=loss_object(label,pre)
  gradient=tape.gradient(loss,model.trainable_variables)
  optimizer.apply_gradients(zip(gradient,model.trainable_variables))
  train_loss(loss)
  train_acc(label,pre)

def test_step(model,input,label,loss_object,test_loss,test_acc):
  pre=model(input,training=False)
  loss=loss_object(label,pre)
  test_loss(loss)
  test_acc(label,pre)
